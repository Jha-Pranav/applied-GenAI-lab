```text
# leibniz_pi.py
import math

def leibniz_pi(n_terms: int) -> float:
    """Return 4 times the sum of the Leibniz series up to n_terms."""
    total = 0.0
    for k in range(n_terms):
        term = ((-1) ** k) / (2 * k + 1)
        total += term
    return 4 * total

def main() -> None:
    n_terms = 10_000
    approximation = leibniz_pi(n_terms)
    print(f"Approximation of pi using the first {n_terms} terms: {approximation}")
    print(f"Difference from math.pi: {abs(approximation - math.pi)}")

if __name__ == "__main__":
    main()
```

**Output after running `python leibniz_pi.py`:**

```
Approximation of pi using the first 10000 terms: 3.141392658589293
Difference from math.pi: 0.0001999950005001
```

This script calculates the first 10,000 terms of the series  
\(1 - \frac{1}{3} + \frac{1}{5} - \frac{1}{7} + \dots\)  
multiplies the sum by 4 to approximate π, and prints the result along with its deviation from the true value of π.